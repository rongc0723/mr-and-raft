package main

//
// a MR application you need to develop
// go build -buildmode=plugin credit.go
//

import (
	"cs350/mr"
	"strconv"
	"strings"
)

// The map function is called once for each file of input. The first
// argument is the name of the input file, and the second is the
// file's complete contents. You should ignore the input file name,
// and look only at the contents argument. The return value is a slice
// of key/value pairs.
func Map(filename string, contents string) []mr.KeyValue {
	// your inplementation here
	kv := []mr.KeyValue{}
	lines := strings.Split(contents, "\n")
	for _, line := range lines[1:] {
		words := strings.Split(line, ",")
		if len(words) < 4 {
			continue
		}
		agency := words[1]
		year := words[2]
		cScore := strings.TrimSpace(words[3])
		creditScore, _ := strconv.Atoi(cScore)
		if year != "2023" || creditScore <= 400 {
			continue
		} else {
			kv = append(kv, mr.KeyValue{Key: agency, Value: "1"})
		}
	}
	return kv
}

// The reduce function is called once for each key generated by the
// map tasks, with a list of all the values created for that key by
// any map task.
func Reduce(key string, values []string) string {
	// your inplementation here

	sum := 0
	for _, value := range values {
		count, _ := strconv.Atoi(value)
		sum += count
	}

	return strconv.Itoa(sum)
}
